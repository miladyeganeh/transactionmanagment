plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'application'
}

group = 'com.my'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

def profiles = 'develop'

bootRun {
    args = ["--spring.profiles.active=" + profiles]
}
mainClassName = 'com.my.accountmanager.AccountManager'
dependencies {
    def withoutHamcrest = { exclude group: 'org.hamcrest', module: 'hamcrest-core' }
    def withoutJunit = { exclude group: 'junit', module: 'junit' }

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.hibernate:hibernate-envers:5.4.17.Final'
    implementation 'javax.validation:validation-api:2.0.0.Final'
    implementation 'org.modelmapper:modelmapper:0.7.5'
    implementation 'mysql:mysql-connector-java:8.0.20'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.0'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas', version: '2.3.0.RELEASE'
    compile("org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE") { true }

    testCompile 'org.easymock:easymock:3.4', { exclude group: 'org.hamcrest', module: 'hamcrest-core' }
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'
    testImplementation('org.hamcrest:hamcrest:2.1')
    testImplementation 'com.tngtech.archunit:archunit-junit5-api:0.11.0', { exclude group: 'junit', module: 'junit' }
    testImplementation 'junit:junit'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

task dockerBuild(){
    doFirst {
       bootJar {
           archiveFileName.set(jarName)
       }
    }
    finalizedBy(clean, build)
}